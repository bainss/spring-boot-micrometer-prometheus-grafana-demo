buildscript {

	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
		/*maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }*/
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// Gradle allow generating a git.properties file containing information about the state of your git source code repository when the project was built.
// apply plugin: 'com.gorylenko.gradle-git-properties'

group = 'com.its'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	/*maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }*/
}

ext {
	springCloudVersion = 'Finchley.SR1'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.cloud:spring-cloud-stream')
	compile('org.springframework.cloud:spring-cloud-stream-reactive')
	compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	compile('io.micrometer:micrometer-registry-prometheus')
	compile('io.micrometer:micrometer-registry-jmx')
	compile('commons-io:commons-io:latest.release')
	/*compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.boot:spring-boot-starter-integration')*/
	runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	testCompile('io.projectreactor:reactor-test')
	testCompile('org.springframework.cloud:spring-cloud-stream-test-support')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}



// To generate build information with Gradle, add an execution for the build-info goal, as shown in the following example
/*springBoot {
	buildInfo()
}*/
